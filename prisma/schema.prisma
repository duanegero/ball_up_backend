generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

model Trainer {
    trainer_user_id         Int                       @id @default(autoincrement())
    email                   String                    @unique
    username                String                    @unique
    hash_password           String
    first_name              String
    last_name               String
    years_experience        Int?
    bio                     String?
    created_at              DateTime                  @default(now())
    athletes                Athlete[]
    WarmupDrill             WarmupDrill[]
    DribblingDrill          DribblingDrill[]
    ShootingDrills          ShootingDrills[]
    ReboundingDefenceDrills ReboundingDefenceDrills[]
    CompletedSession        CompletedSession[]

    @@map("trainers")
}

model Athlete {
    athlete_user_id Int      @id @default(autoincrement())
    email           String   @unique
    username        String   @unique
    hash_password   String
    first_name      String
    last_name       String
    age             Int
    level           Int
    created_at      DateTime @default(now())

    trainer_id           Int?
    half_hour_session_id Int?
    hour_session_id      Int?

    trainer          Trainer?           @relation(fields: [trainer_id], references: [trainer_user_id])
    CompletedSession CompletedSession[]

    @@map("athletes")
}

model WarmupDrill {
    warmup_id   Int      @id @default(autoincrement())
    trainer_id  Int
    description String
    level       Int
    created_at  DateTime @default(now())

    trainer         Trainer           @relation(fields: [trainer_id], references: [trainer_user_id])
    HalfHourSession HalfHourSession[]
    HourSession     HourSession[]

    @@map("warmup_drills")
}

model DribblingDrill {
    dribble_id  Int      @id @default(autoincrement())
    trainer_id  Int
    description String
    level       Int
    created_at  DateTime @default(now())

    trainer         Trainer           @relation(fields: [trainer_id], references: [trainer_user_id])
    HalfHourSession HalfHourSession[]
    HourSessionOne  HourSession[]     @relation("DribbleOne")
    HourSessionTwo  HourSession[]     @relation("DribbleTwo")

    @@map("dribbling_drills")
}

model ShootingDrills {
    shoot_id    Int      @id @default(autoincrement())
    trainer_id  Int
    description String
    level       Int
    created_at  DateTime @default(now())

    trainer          Trainer           @relation(fields: [trainer_id], references: [trainer_user_id])
    HalfHourSession  HalfHourSession[]
    HourSessionOne   HourSession[]     @relation("ShootOne")
    HourSessionTwo   HourSession[]     @relation("ShootTwo")
    HourSessionThree HourSession[]     @relation("ShootThree")

    @@map("shooting_drills")
}

model ReboundingDefenceDrills {
    rebound_defence_id Int      @id @default(autoincrement())
    trainer_id         Int
    description        String
    level              Int
    created_at         DateTime @default(now())

    trainer         Trainer           @relation(fields: [trainer_id], references: [trainer_user_id])
    HalfHourSession HalfHourSession[]
    HourSessionOne  HourSession[]     @relation("ReboundDefenceOne")
    HourSessionTwo  HourSession[]     @relation("ReboundDefenceTwo")

    @@map("rebounding_defense_drills")
}

model HalfHourSession {
    half_hour_session_id Int @id @default(autoincrement())

    warmup_id          Int
    dribble_id         Int
    shoot_id           Int
    rebound_defence_id Int

    warmupDrill            WarmupDrill             @relation(fields: [warmup_id], references: [warmup_id])
    dribblingDrill         DribblingDrill          @relation(fields: [dribble_id], references: [dribble_id])
    shootingDrill          ShootingDrills          @relation(fields: [shoot_id], references: [shoot_id])
    reboundingDefenceDrill ReboundingDefenceDrills @relation(fields: [rebound_defence_id], references: [rebound_defence_id])
    CompletedSession       CompletedSession[]

    @@map("half_hour_sessions")
}

model HourSession {
    hour_session_id        Int      @id @default(autoincrement())
    warmup_id              Int
    dribble_id_one         Int
    dribble_id_two         Int
    shoot_id_one           Int
    shoot_id_two           Int
    shoot_id_three         Int
    rebound_defence_id_one Int
    rebound_defence_id_two Int
    created_at             DateTime @default(now())

    warmupDrill        WarmupDrill             @relation(fields: [warmup_id], references: [warmup_id])
    dribblingDrillOne  DribblingDrill          @relation("DribbleOne", fields: [dribble_id_one], references: [dribble_id])
    dribblingDrillTwo  DribblingDrill          @relation("DribbleTwo", fields: [dribble_id_two], references: [dribble_id])
    shootingDrillOne   ShootingDrills          @relation("ShootOne", fields: [shoot_id_one], references: [shoot_id])
    shootingDrillTwo   ShootingDrills          @relation("ShootTwo", fields: [shoot_id_two], references: [shoot_id])
    shootingDrillThree ShootingDrills          @relation("ShootThree", fields: [shoot_id_three], references: [shoot_id])
    reboundDefenceOne  ReboundingDefenceDrills @relation("ReboundDefenceOne", fields: [rebound_defence_id_one], references: [rebound_defence_id])
    reboundDefenceTwo  ReboundingDefenceDrills @relation("ReboundDefenceTwo", fields: [rebound_defence_id_two], references: [rebound_defence_id])
    CompletedSession   CompletedSession[]

    @@map("hour_sessions")
}

model CompletedSession {
    completed_session_id Int      @id @default(autoincrement())
    half_hour_session_id Int?
    hour_session_id      Int?
    athlete_id           Int
    trainer_id           Int
    created_at           DateTime @default(now())

    halfHourSession HalfHourSession? @relation(fields: [half_hour_session_id], references: [half_hour_session_id])
    hourSession     HourSession?     @relation(fields: [hour_session_id], references: [hour_session_id])
    athlete         Athlete          @relation(fields: [athlete_id], references: [athlete_user_id])
    trainer         Trainer          @relation(fields: [trainer_id], references: [trainer_user_id])

    @@map("completed_sessions")
}
